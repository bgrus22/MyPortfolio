library(ggrepel)
library(GGally)
##shiny stuff
library(shiny)
library(shinydashboard)
library(shinythemes)
WBdta <- read_csv('CleanData/WB_clean.csv')
LCOEdta <-  read_csv('CleanData/LCOE.csv')
globalplants <- read_csv('CleanData/globalplants1.csv')
CCoEdta <-  read_csv('CleanData/capital-costs-of-electricity.csv')
Materials <- read_csv('CleanData/Plant_Materials.csv')
Matprice <- read_csv('CleanData/Material_prices.csv')
p1 <- CCoEdta %>%
ggplot(aes(x=`Energy Source`,y=`Levelized Cost of Generation($ per megawatt hour)`,fill=`Energy Source`)) +
geom_bar(stat = "identity") +
ylab("Levelized Energy Cost ($ per megawatt hour)") +
xlab("") +
ggtitle("Levelized Cost of by Energy Source") +
theme_hc() +
geom_text(aes(label = `Levelized Cost of Generation($ per megawatt hour)`),vjust = -.2) +
theme(axis.text.x = element_blank(),  # remove x-axis labels
axis.ticks.x = element_blank())  # remove x-axis ticks)
p1 <- ggplotly(p1)
p1
#drop
droplist = c("Country","Plant type","Construction costs (USD/MWh)", "Refurbishment costs (USD/MWh)", "Decommissioning costs (USD/MWh)", "Operations & maintenance costs (USD/MWh)", 'energy_type', 'Energy type' )
LCOE1 <- LCOEdta[, !(names(LCOEdta) %in% droplist)]
#pivot
LCOE1 <- pivot_longer(
LCOE1,
cols = c("Total capital costs (USD/MWh)","Total Fuel cost (USD/MWh)"),
names_to = "Cost_Type",
values_to = "Cost")
#summarize
LCOE1agg <- LCOE1 %>%
#this is a possible interaction?
group_by(`Plant category`,
Cost_Type) %>%
summarize(Avg_Cost = mean(Cost))
p1.1 <- LCOE1agg %>%
ggplot(aes(x = `Plant category`, y = Avg_Cost, fill = Cost_Type)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(x = "Category", y = "Value") +
ggtitle("Side-by-Side Bar Graph") +
theme_hc()
p1.1
#side by side to stacked
p1.11 <- LCOE1agg %>%
ggplot(aes(x = `Plant category`, y = Avg_Cost, fill = Cost_Type)) +
geom_bar(stat = "identity", position = position_stack()) +
labs(x = "Category", y = "Value") +
ggtitle("Stacked Bar Graph") +
theme_hc()
p1.11
#switch with below
p2 <- Materials %>%
ggplot(aes(x = `Plant Type`, y = `Kg/MW of Capacity`, fill = `Component`)) +
geom_bar(stat = "identity") +
labs(x = "Plant Type", y = "Kg/MW of Capacity", fill = "Component") +
coord_flip() +
theme_bw()
p2 <- ggplotly(p2)
p2
#Use Matprice to make a cost version of above graph
p2.1 <- Materials %>%
ggplot(aes(x = `Plant Type`, y = `price in 2013`, fill = `Component`)) +
geom_bar(stat = "identity") +
labs(x = "Plant Type", y = "Price in 2013", fill = "Component") +
coord_flip() +
geom_text(aes(label = scales::comma(..y..)), stat = "count", position = position_stack(vjust = 0.5)) +
theme_bw()
p2.1 <- ggplotly(p2.1)
View(Materials)
#Use Matprice to make a cost version of above graph
p2.1 <- Materials %>%
ggplot(aes(x = `Plant Type`, y = `price in 2022`, fill = `Component`)) +
geom_bar(stat = "identity") +
labs(x = "Plant Type", y = "Price in 2013", fill = "Component") +
coord_flip() +
geom_text(aes(label = scales::comma(..y..)), stat = "count", position = position_stack(vjust = 0.5)) +
theme_bw()
p2.1 <- ggplotly(p2.1)
#Use Matprice to make a cost version of above graph
p2.1 <- Materials %>%
ggplot(aes(x = `Plant Type`, y = `price in 2022`, fill = `Component`)) +
geom_bar(stat = "identity") +
labs(x = "Plant Type", y = "Price in 2013", fill = "Component") +
coord_flip() +
#  geom_text(aes(label = scales::comma(..y..)), stat = "count", position = position_stack(vjust = 0.5)) +
theme_bw()
p2.1 <- ggplotly(p2.1)
p2.1
#Use Matprice to make a cost version of above graph
p2.1 <- Materials %>%
ggplot(aes(x = `Plant Type`, y = `price in 2022`, fill = `Component`)) +
geom_bar(stat = "identity") +
labs(x = "Plant Type", y = "Price in 2013", fill = "Component") +
coord_flip() +
geom_text(aes(label = scales::comma(..y..)), stat = "count", position = position_stack(vjust = 0.5)) +
theme_bw()
p2.1 <- ggplotly(p2.1)
#Use Matprice to make a cost version of above graph
p2.1 <- Materials %>%
ggplot(aes(x = `Plant Type`, y = `price in 2022`, fill = `Component`)) +
geom_bar(stat = "identity") +
labs(x = "Plant Type", y = "Price in 2013", fill = "Component") +
coord_flip() +
geom_text(aes(label = scales::comma(..y..)), stat = y, position = position_stack(vjust = 0.5)) +
theme_bw()
p2.1 <- Materials %>%
ggplot(aes(x = `Plant Type`, y = `price in 2013`, fill = `Component`)) +
geom_bar(stat = "identity") +
geom_text(aes(label = sprintf("$%.2f", stat(y)),
y = stat(y),
group = `Plant Type`),
position = "stack",
size = 3) +
labs(x = "Plant Type", y = "Price in 2013", fill = "Component") +
coord_flip() +
theme_bw()
p2.1 <- Materials %>%
ggplot(aes(x = `Plant Type`, y = `price in 2013`, fill = `Component`)) +
geom_bar(stat = "identity") +
geom_text(aes(label = sprintf("$%.2f", stat(y)),
y = stat(y),
group = `Plant Type`),
position = "stack",
size = 3) +
labs(x = "Plant Type", y = "Price in 2013", fill = "Component") +
coord_flip() +
theme_bw()
p2.1
p2.1 <- Materials %>%
ggplot(aes(x = `Plant Type`, y = `price in 2013`, fill = `Component`)) +
geom_bar(stat = "identity") +
geom_text(aes(label = sprintf("$%.2f", stat(y)),
y = stat(`price in 2013`),
group = `Plant Type`),
position = "stack",
size = 3) +
labs(x = "Plant Type", y = "Price in 2013", fill = "Component") +
coord_flip() +
theme_bw()
p2.1
knitr::opts_chunk$set(echo = FALSE)
#import libraries
##wrangling
library(tidyverse)
library(dplyr)
library(stringr)
library(scales)
library(readxl)
##visualization
library(plotly)
library(ggplot2)
library(gganimate)
library(transformr)
library(maps)
library(ggthemes)
library(ggrepel)
library(GGally)
##shiny stuff
library(shiny)
library(shinydashboard)
library(shinythemes)
WBdta <- read_csv('CleanData/WB_clean.csv')
LCOEdta <-  read_csv('CleanData/LCOE.csv')
globalplants <- read_csv('CleanData/globalplants1.csv')
CCoEdta <-  read_csv('CleanData/capital-costs-of-electricity.csv')
Materials <- read_csv('CleanData/Plant_Materials.csv')
Matprice <- read_csv('CleanData/Material_prices.csv')
p1 <- CCoEdta %>%
ggplot(aes(x=`Energy Source`,y=`Levelized Cost of Generation($ per megawatt hour)`,fill=`Energy Source`)) +
geom_bar(stat = "identity") +
ylab("Levelized Energy Cost ($ per megawatt hour)") +
xlab("") +
ggtitle("Levelized Cost of by Energy Source") +
theme_hc() +
geom_text(aes(label = `Levelized Cost of Generation($ per megawatt hour)`),vjust = -.2) +
theme(axis.text.x = element_blank(),  # remove x-axis labels
axis.ticks.x = element_blank())  # remove x-axis ticks)
p1 <- ggplotly(p1)
p1
#drop
droplist = c("Country","Plant type","Construction costs (USD/MWh)", "Refurbishment costs (USD/MWh)", "Decommissioning costs (USD/MWh)", "Operations & maintenance costs (USD/MWh)", 'energy_type', 'Energy type' )
LCOE1 <- LCOEdta[, !(names(LCOEdta) %in% droplist)]
#pivot
LCOE1 <- pivot_longer(
LCOE1,
cols = c("Total capital costs (USD/MWh)","Total Fuel cost (USD/MWh)"),
names_to = "Cost_Type",
values_to = "Cost")
#summarize
LCOE1agg <- LCOE1 %>%
#this is a possible interaction?
group_by(`Plant category`,
Cost_Type) %>%
summarize(Avg_Cost = mean(Cost))
p1.1 <- LCOE1agg %>%
ggplot(aes(x = `Plant category`, y = Avg_Cost, fill = Cost_Type)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(x = "Category", y = "Value") +
ggtitle("Side-by-Side Bar Graph") +
theme_hc()
p1.1
#side by side to stacked
p1.11 <- LCOE1agg %>%
ggplot(aes(x = `Plant category`, y = Avg_Cost, fill = Cost_Type)) +
geom_bar(stat = "identity", position = position_stack()) +
labs(x = "Category", y = "Value") +
ggtitle("Stacked Bar Graph") +
theme_hc()
p1.11
#switch with below
p2 <- Materials %>%
ggplot(aes(x = `Plant Type`, y = `Kg/MW of Capacity`, fill = `Component`)) +
geom_bar(stat = "identity") +
labs(x = "Plant Type", y = "Kg/MW of Capacity", fill = "Component") +
coord_flip() +
theme_bw()
p2 <- ggplotly(p2)
p2
#Use Matprice to make a cost version of above graph
p2.1 <- Materials %>%
ggplot(aes(x = `Plant Type`, y = `price in 2022`, fill = `Component`)) +
geom_bar(stat = "identity") +
labs(x = "Plant Type", y = "Price in 2013", fill = "Component") +
coord_flip() +
geom_text(aes(label = scales::comma(..y..)), stat = "count", position = position_stack(vjust = 0.5)) +
theme_bw()
p2.1 <- ggplotly(p2.1)
#Use Matprice to make a cost version of above graph
p2.1 <- Materials %>%
ggplot(aes(x = `Plant Type`, y = `price in 2022`, fill = `Component`)) +
geom_bar(stat = "identity") +
labs(x = "Plant Type", y = "Price in 2013", fill = "Component") +
coord_flip() +
theme_bw()
p2.1 <- ggplotly(p2.1)
p2.1
Matprice1 <- Matprice[Matprice$Component %in% c('Chromium', 'Cobalt', 'Copper', 'Manganese', 'Nickel', 'Silicon'), ]
p2.2 <- Matprice1 %>%
ggplot(aes(x = Year, y = Price_per_Ton, group = Component, color = Component)) +
geom_line() +
theme_light()
p2.21 <- ggplotly(p2.2)
p2.21
p3 <- globalplants %>%
ggplot(aes(x=primary_fuel,fill=primary_fuel)) +
geom_bar() +
geom_text(stat = "count", aes(label = after_stat(count)), vjust = -.3) +
theme_hc()
#p3 <- ggplotly(p3)
p3
globalplants$geothermal <-  ifelse(globalplants$primary_fuel=='Geothermal','Yes','No')
p4 <- globalplants %>%
ggplot(aes(x=longitude,y=latitude)) +
#  geom_point(data = subset(d1,geothermal=='No',), aes(color=geothermal)) +
geom_point(data = subset(globalplants, geothermal=='Yes',),  aes(color=geothermal, size=capacity_mw)) +
scale_color_manual(values = c("Yes" = 'red', "No" = 'transparent'), guide = FALSE)+
ggtitle('Geothermal Powerplants of the World') +
labs(x=NULL,y=NULL,color='Geothermal',size='Geothermal MW Capacity') +
theme_void() +
borders()
p4
p4.1 <- globalplants[globalplants$primary_fuel %in% "Geothermal", ] %>%
ggplot(aes(x=primary_fuel, y = capacity_mw, color = primary_fuel)) +
geom_boxplot() +
theme_hc()
p4.1
unique(globalplants$primary_fuel)
runApp()
shiny::runApp()
knitr::opts_chunk$set(echo = FALSE)
#import libraries
##wrangling
library(tidyverse)
library(dplyr)
library(stringr)
library(scales)
library(readxl)
##visualization
library(plotly)
library(ggplot2)
library(gganimate)
library(transformr)
library(maps)
library(ggthemes)
library(ggrepel)
library(GGally)
##shiny stuff
library(shiny)
library(shinydashboard)
library(shinythemes)
unique(Matprice1$Year)
class(Matprice1$Year)
runApp()
View(LCOE1agg)
View(LCOE1)
View(LCOE1)
View(LCOE1)
View(LCOEdta)
View(LCOE1)
#summarize
LCOE1agg <- LCOE1 %>%
#this is a possible interaction?
group_by(`Plant category`,
Cost_Type) %>%
summarize(Avg_Cost = mean(Cost))
p1.1 <- LCOE1agg %>%
ggplot(aes(x = `Plant category`, y = Avg_Cost, fill = Cost_Type)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(x = "Category", y = "Value") +
ggtitle("Side-by-Side Bar Graph") +
theme_hc()
p1.1
View(LCOE1)
View(LCOE1agg)
View(LCOE1)
View(LCOEdta)
runApp()
runApp()
View(LCOE1)
View(LCOE1)
View(LCOE1)
View(LCOE1agg)
View(LCOEdta)
runApp()
runApp()
runApp('C:/Users/agrus/Desktop/Data Viz/HW5')
runApp()
p1.12<- p1.11 %>%
ggplotly()
p1.12
#side by side to stacked
p1.11 <- LCOE1agg %>%
ggplot(aes(x = `Plant category`, y = Avg_Cost, fill = Cost_Type)) +
geom_bar(stat = "identity", position = position_stack()) +
labs(x = "Category", y = "Value") +
ggtitle("Stacked Bar Graph") +
theme_hc() %>%
ggplotly()
#side by side to stacked
p1.11 <- LCOE1agg %>%
ggplot(aes(x = `Plant category`, y = Avg_Cost, fill = Cost_Type)) +
geom_bar(stat = "identity", position = position_stack()) +
labs(x = "Category", y = "Value") +
ggtitle("Stacked Bar Graph") +
theme_hc()
p1.11
runApp()
View(LCOE1)
WBdta <- read_csv('CleanData/WB_clean.csv')
LCOEdta <-  read_csv('CleanData/LCOE.csv')
globalplants <- read_csv('CleanData/globalplants1.csv')
CCoEdta <-  read_csv('CleanData/capital-costs-of-electricity.csv')
Materials <- read_csv('CleanData/Plant_Materials.csv')
Matprice <- read_csv('CleanData/Material_prices.csv')
#drop
droplist = c("Country","Plant type","Construction costs (USD/MWh)", "Refurbishment costs (USD/MWh)", "Decommissioning costs (USD/MWh)", "Operations & maintenance costs (USD/MWh)", 'energy_type'
#, 'Energy type'
)
LCOE1 <- LCOEdta[, !(names(LCOEdta) %in% droplist)]
#pivot
LCOE1 <- pivot_longer(
LCOE1,
cols = c("Total capital costs (USD/MWh)","Total Fuel cost (USD/MWh)"),
names_to = "Cost_Type",
values_to = "Cost")
#add 2 data options
simpagg <- LCOE1 %>%
select(-`Energy type`) %>%
group_by(`Plant category`,Cost_Type) %>%
summarize(Avg_Cost = mean(Cost))
expagg <- LCOE1 %>%
select(-`Plant category`) %>%
group_by(`Energy type`, Cost_Type) %>%
summarize(Avg_Cost = mean(Cost))
View(simpagg)
runApp()
View(simpagg)
View(expagg)
runApp()
View(expagg)
runApp()
View(Matprice1)
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
knitr::opts_chunk$set(echo = FALSE)
#import libraries
##wrangling
library(tidyverse)
library(dplyr)
library(stringr)
library(scales)
library(readxl)
##visualization
library(plotly)
library(ggplot2)
library(gganimate)
library(transformr)
library(maps)
library(ggthemes)
library(ggrepel)
library(GGally)
##shiny stuff
library(shiny)
library(shinydashboard)
library(shinythemes)
Materials %>%
ggplot(aes(x = `Plant Type`, y = `Kg/MW of Capacity`, fill = `Component`)) +
geom_point() +
labs(x = "Plant Type", y = "Kg/MW of Capacity", fill = "Component") +
coord_flip() +
theme_bw()
Materials %>%
ggplot(aes(x = `Plant Type`, y = `Kg/MW of Capacity`, fill = `Component`)) +
geom_point() +
labs(x = "Plant Type", y = "Kg/MW of Capacity", fill = "Component") +
coord_flip() +
theme_bw()
Materials %>%
ggplot(aes(x = `Plant Type`, y = `Kg/MW of Capacity`, color = `Component`)) +
geom_point() +
labs(x = "Plant Type", y = "Kg/MW of Capacity", color = "Component") +
coord_flip() +
theme_bw()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
View(globalplants)
View(globalplants)
runApp()
View(expagg)
runApp()
knitr::opts_chunk$set(echo = FALSE)
#import libraries
##wrangling
library(tidyverse)
library(dplyr)
library(stringr)
library(scales)
library(readxl)
##visualization
library(plotly)
library(ggplot2)
library(gganimate)
library(transformr)
library(maps)
library(ggthemes)
library(ggrepel)
library(GGally)
##shiny stuff
library(shiny)
library(shinydashboard)
library(shinythemes)
#add 2 data options
simpagg <- LCOE1 %>%
select(-`Energy type`) %>%
group_by(`Plant category`,Cost_Type) %>%
summarize(Avg_Cost = mean(Cost))
expagg <- LCOE1 %>%
select(-`Plant category`) %>%
group_by(`Energy type`, Cost_Type) %>%
summarize(Avg_Cost = mean(Cost))
expagg_lab <- expagg %>%
group_by(`Energy type`) %>%
summarise(total_cost = sum(Avg_Cost)) %>%
arrange(desc(total_cost)) %>%
pull(`Energy type`) %>%
factor(., levels = ., ordered = TRUE)
#add 2 data options
simpagg <- LCOE1 %>%
select(-`Energy type`) %>%
group_by(`Plant category`,Cost_Type) %>%
summarize(Avg_Cost = mean(Cost))
expagg <- LCOE1 %>%
select(-`Plant category`) %>%
group_by(`Energy type`, Cost_Type) %>%
summarize(Avg_Cost = mean(Cost))
expagg_lab <- expagg %>%
group_by(`Energy type`) %>%
summarise(total_cost = sum(Avg_Cost)) %>%
arrange(desc(total_cost)) %>%
pull(`Energy type`) %>%
factor(., levels = ., ordered = TRUE)
expagg_lab
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
